// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v5.26.1
// source: realtime.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message types
type MessageType int32

const (
	MessageType_UNKNOWN                 MessageType = 0
	MessageType_MARKER_CREATED          MessageType = 1
	MessageType_MARKER_UPDATED          MessageType = 2
	MessageType_MARKER_DELETED          MessageType = 3
	MessageType_USER_JOINED             MessageType = 4
	MessageType_USER_LEFT               MessageType = 5
	MessageType_USER_PRESENCE           MessageType = 6
	MessageType_COLLABORATION_SYNC      MessageType = 7
	MessageType_COLLABORATION_CURSOR    MessageType = 8
	MessageType_COLLABORATION_SELECTION MessageType = 9
	MessageType_PING                    MessageType = 10
	MessageType_PONG                    MessageType = 11
	MessageType_ERROR                   MessageType = 12
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "MARKER_CREATED",
		2:  "MARKER_UPDATED",
		3:  "MARKER_DELETED",
		4:  "USER_JOINED",
		5:  "USER_LEFT",
		6:  "USER_PRESENCE",
		7:  "COLLABORATION_SYNC",
		8:  "COLLABORATION_CURSOR",
		9:  "COLLABORATION_SELECTION",
		10: "PING",
		11: "PONG",
		12: "ERROR",
	}
	MessageType_value = map[string]int32{
		"UNKNOWN":                 0,
		"MARKER_CREATED":          1,
		"MARKER_UPDATED":          2,
		"MARKER_DELETED":          3,
		"USER_JOINED":             4,
		"USER_LEFT":               5,
		"USER_PRESENCE":           6,
		"COLLABORATION_SYNC":      7,
		"COLLABORATION_CURSOR":    8,
		"COLLABORATION_SELECTION": 9,
		"PING":                    10,
		"PONG":                    11,
		"ERROR":                   12,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_realtime_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_realtime_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_realtime_proto_rawDescGZIP(), []int{0}
}

type UserStatus int32

const (
	UserStatus_OFFLINE UserStatus = 0
	UserStatus_ONLINE  UserStatus = 1
	UserStatus_AWAY    UserStatus = 2
	UserStatus_BUSY    UserStatus = 3
)

// Enum value maps for UserStatus.
var (
	UserStatus_name = map[int32]string{
		0: "OFFLINE",
		1: "ONLINE",
		2: "AWAY",
		3: "BUSY",
	}
	UserStatus_value = map[string]int32{
		"OFFLINE": 0,
		"ONLINE":  1,
		"AWAY":    2,
		"BUSY":    3,
	}
)

func (x UserStatus) Enum() *UserStatus {
	p := new(UserStatus)
	*p = x
	return p
}

func (x UserStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_realtime_proto_enumTypes[1].Descriptor()
}

func (UserStatus) Type() protoreflect.EnumType {
	return &file_realtime_proto_enumTypes[1]
}

func (x UserStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserStatus.Descriptor instead.
func (UserStatus) EnumDescriptor() ([]byte, []int) {
	return file_realtime_proto_rawDescGZIP(), []int{1}
}

type CollaborationType int32

const (
	CollaborationType_CURSOR_MOVE      CollaborationType = 0
	CollaborationType_SELECTION_CHANGE CollaborationType = 1
	CollaborationType_CONTENT_CHANGE   CollaborationType = 2
)

// Enum value maps for CollaborationType.
var (
	CollaborationType_name = map[int32]string{
		0: "CURSOR_MOVE",
		1: "SELECTION_CHANGE",
		2: "CONTENT_CHANGE",
	}
	CollaborationType_value = map[string]int32{
		"CURSOR_MOVE":      0,
		"SELECTION_CHANGE": 1,
		"CONTENT_CHANGE":   2,
	}
)

func (x CollaborationType) Enum() *CollaborationType {
	p := new(CollaborationType)
	*p = x
	return p
}

func (x CollaborationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CollaborationType) Descriptor() protoreflect.EnumDescriptor {
	return file_realtime_proto_enumTypes[2].Descriptor()
}

func (CollaborationType) Type() protoreflect.EnumType {
	return &file_realtime_proto_enumTypes[2]
}

func (x CollaborationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CollaborationType.Descriptor instead.
func (CollaborationType) EnumDescriptor() ([]byte, []int) {
	return file_realtime_proto_rawDescGZIP(), []int{2}
}

// Base WebSocket message
type WSMessage struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Type      MessageType            `protobuf:"varint,1,opt,name=type,proto3,enum=messages.MessageType" json:"type,omitempty"`
	Id        string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Timestamp int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	UserId    string                 `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoomId    string                 `protobuf:"bytes,5,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*WSMessage_MarkerEvent
	//	*WSMessage_UserEvent
	//	*WSMessage_CollaborationEvent
	//	*WSMessage_ErrorEvent
	//	*WSMessage_PresenceEvent
	Payload       isWSMessage_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WSMessage) Reset() {
	*x = WSMessage{}
	mi := &file_realtime_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WSMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WSMessage) ProtoMessage() {}

func (x *WSMessage) ProtoReflect() protoreflect.Message {
	mi := &file_realtime_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WSMessage.ProtoReflect.Descriptor instead.
func (*WSMessage) Descriptor() ([]byte, []int) {
	return file_realtime_proto_rawDescGZIP(), []int{0}
}

func (x *WSMessage) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_UNKNOWN
}

func (x *WSMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WSMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *WSMessage) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *WSMessage) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *WSMessage) GetPayload() isWSMessage_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *WSMessage) GetMarkerEvent() *MarkerEvent {
	if x != nil {
		if x, ok := x.Payload.(*WSMessage_MarkerEvent); ok {
			return x.MarkerEvent
		}
	}
	return nil
}

func (x *WSMessage) GetUserEvent() *UserEvent {
	if x != nil {
		if x, ok := x.Payload.(*WSMessage_UserEvent); ok {
			return x.UserEvent
		}
	}
	return nil
}

func (x *WSMessage) GetCollaborationEvent() *CollaborationEvent {
	if x != nil {
		if x, ok := x.Payload.(*WSMessage_CollaborationEvent); ok {
			return x.CollaborationEvent
		}
	}
	return nil
}

func (x *WSMessage) GetErrorEvent() *ErrorEvent {
	if x != nil {
		if x, ok := x.Payload.(*WSMessage_ErrorEvent); ok {
			return x.ErrorEvent
		}
	}
	return nil
}

func (x *WSMessage) GetPresenceEvent() *PresenceEvent {
	if x != nil {
		if x, ok := x.Payload.(*WSMessage_PresenceEvent); ok {
			return x.PresenceEvent
		}
	}
	return nil
}

type isWSMessage_Payload interface {
	isWSMessage_Payload()
}

type WSMessage_MarkerEvent struct {
	MarkerEvent *MarkerEvent `protobuf:"bytes,10,opt,name=marker_event,json=markerEvent,proto3,oneof"`
}

type WSMessage_UserEvent struct {
	UserEvent *UserEvent `protobuf:"bytes,11,opt,name=user_event,json=userEvent,proto3,oneof"`
}

type WSMessage_CollaborationEvent struct {
	CollaborationEvent *CollaborationEvent `protobuf:"bytes,12,opt,name=collaboration_event,json=collaborationEvent,proto3,oneof"`
}

type WSMessage_ErrorEvent struct {
	ErrorEvent *ErrorEvent `protobuf:"bytes,13,opt,name=error_event,json=errorEvent,proto3,oneof"`
}

type WSMessage_PresenceEvent struct {
	PresenceEvent *PresenceEvent `protobuf:"bytes,14,opt,name=presence_event,json=presenceEvent,proto3,oneof"`
}

func (*WSMessage_MarkerEvent) isWSMessage_Payload() {}

func (*WSMessage_UserEvent) isWSMessage_Payload() {}

func (*WSMessage_CollaborationEvent) isWSMessage_Payload() {}

func (*WSMessage_ErrorEvent) isWSMessage_Payload() {}

func (*WSMessage_PresenceEvent) isWSMessage_Payload() {}

// Marker events
type MarkerEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MarkerId      string                 `protobuf:"bytes,1,opt,name=marker_id,json=markerId,proto3" json:"marker_id,omitempty"`
	GameId        string                 `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	MapId         string                 `protobuf:"bytes,3,opt,name=map_id,json=mapId,proto3" json:"map_id,omitempty"`
	CategoryId    string                 `protobuf:"bytes,4,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Title         string                 `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Position      *Coordinate            `protobuf:"bytes,7,opt,name=position,proto3" json:"position,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Status        string                 `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkerEvent) Reset() {
	*x = MarkerEvent{}
	mi := &file_realtime_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkerEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkerEvent) ProtoMessage() {}

func (x *MarkerEvent) ProtoReflect() protoreflect.Message {
	mi := &file_realtime_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkerEvent.ProtoReflect.Descriptor instead.
func (*MarkerEvent) Descriptor() ([]byte, []int) {
	return file_realtime_proto_rawDescGZIP(), []int{1}
}

func (x *MarkerEvent) GetMarkerId() string {
	if x != nil {
		return x.MarkerId
	}
	return ""
}

func (x *MarkerEvent) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *MarkerEvent) GetMapId() string {
	if x != nil {
		return x.MapId
	}
	return ""
}

func (x *MarkerEvent) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *MarkerEvent) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MarkerEvent) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MarkerEvent) GetPosition() *Coordinate {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *MarkerEvent) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *MarkerEvent) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type Coordinate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lat           float64                `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng           float64                `protobuf:"fixed64,2,opt,name=lng,proto3" json:"lng,omitempty"`
	Zoom          int32                  `protobuf:"varint,3,opt,name=zoom,proto3" json:"zoom,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Coordinate) Reset() {
	*x = Coordinate{}
	mi := &file_realtime_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Coordinate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coordinate) ProtoMessage() {}

func (x *Coordinate) ProtoReflect() protoreflect.Message {
	mi := &file_realtime_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coordinate.ProtoReflect.Descriptor instead.
func (*Coordinate) Descriptor() ([]byte, []int) {
	return file_realtime_proto_rawDescGZIP(), []int{2}
}

func (x *Coordinate) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *Coordinate) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

func (x *Coordinate) GetZoom() int32 {
	if x != nil {
		return x.Zoom
	}
	return 0
}

// User events
type UserEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	AvatarUrl     string                 `protobuf:"bytes,3,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	Status        UserStatus             `protobuf:"varint,4,opt,name=status,proto3,enum=messages.UserStatus" json:"status,omitempty"`
	LastPosition  *Coordinate            `protobuf:"bytes,5,opt,name=last_position,json=lastPosition,proto3" json:"last_position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserEvent) Reset() {
	*x = UserEvent{}
	mi := &file_realtime_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserEvent) ProtoMessage() {}

func (x *UserEvent) ProtoReflect() protoreflect.Message {
	mi := &file_realtime_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserEvent.ProtoReflect.Descriptor instead.
func (*UserEvent) Descriptor() ([]byte, []int) {
	return file_realtime_proto_rawDescGZIP(), []int{3}
}

func (x *UserEvent) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserEvent) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserEvent) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *UserEvent) GetStatus() UserStatus {
	if x != nil {
		return x.Status
	}
	return UserStatus_OFFLINE
}

func (x *UserEvent) GetLastPosition() *Coordinate {
	if x != nil {
		return x.LastPosition
	}
	return nil
}

// Presence tracking
type PresenceEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	RoomId        string                 `protobuf:"bytes,3,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Position      *Coordinate            `protobuf:"bytes,4,opt,name=position,proto3" json:"position,omitempty"`
	Status        UserStatus             `protobuf:"varint,5,opt,name=status,proto3,enum=messages.UserStatus" json:"status,omitempty"`
	LastSeen      int64                  `protobuf:"varint,6,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PresenceEvent) Reset() {
	*x = PresenceEvent{}
	mi := &file_realtime_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PresenceEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresenceEvent) ProtoMessage() {}

func (x *PresenceEvent) ProtoReflect() protoreflect.Message {
	mi := &file_realtime_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresenceEvent.ProtoReflect.Descriptor instead.
func (*PresenceEvent) Descriptor() ([]byte, []int) {
	return file_realtime_proto_rawDescGZIP(), []int{4}
}

func (x *PresenceEvent) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PresenceEvent) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PresenceEvent) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *PresenceEvent) GetPosition() *Coordinate {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *PresenceEvent) GetStatus() UserStatus {
	if x != nil {
		return x.Status
	}
	return UserStatus_OFFLINE
}

func (x *PresenceEvent) GetLastSeen() int64 {
	if x != nil {
		return x.LastSeen
	}
	return 0
}

func (x *PresenceEvent) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Collaboration events
type CollaborationEvent struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	SessionId string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Type      CollaborationType      `protobuf:"varint,2,opt,name=type,proto3,enum=messages.CollaborationType" json:"type,omitempty"`
	// Types that are valid to be assigned to Data:
	//
	//	*CollaborationEvent_Cursor
	//	*CollaborationEvent_Selection
	//	*CollaborationEvent_ContentSync
	Data          isCollaborationEvent_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CollaborationEvent) Reset() {
	*x = CollaborationEvent{}
	mi := &file_realtime_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollaborationEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollaborationEvent) ProtoMessage() {}

func (x *CollaborationEvent) ProtoReflect() protoreflect.Message {
	mi := &file_realtime_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollaborationEvent.ProtoReflect.Descriptor instead.
func (*CollaborationEvent) Descriptor() ([]byte, []int) {
	return file_realtime_proto_rawDescGZIP(), []int{5}
}

func (x *CollaborationEvent) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *CollaborationEvent) GetType() CollaborationType {
	if x != nil {
		return x.Type
	}
	return CollaborationType_CURSOR_MOVE
}

func (x *CollaborationEvent) GetData() isCollaborationEvent_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CollaborationEvent) GetCursor() *CursorUpdate {
	if x != nil {
		if x, ok := x.Data.(*CollaborationEvent_Cursor); ok {
			return x.Cursor
		}
	}
	return nil
}

func (x *CollaborationEvent) GetSelection() *SelectionUpdate {
	if x != nil {
		if x, ok := x.Data.(*CollaborationEvent_Selection); ok {
			return x.Selection
		}
	}
	return nil
}

func (x *CollaborationEvent) GetContentSync() *ContentSync {
	if x != nil {
		if x, ok := x.Data.(*CollaborationEvent_ContentSync); ok {
			return x.ContentSync
		}
	}
	return nil
}

type isCollaborationEvent_Data interface {
	isCollaborationEvent_Data()
}

type CollaborationEvent_Cursor struct {
	Cursor *CursorUpdate `protobuf:"bytes,10,opt,name=cursor,proto3,oneof"`
}

type CollaborationEvent_Selection struct {
	Selection *SelectionUpdate `protobuf:"bytes,11,opt,name=selection,proto3,oneof"`
}

type CollaborationEvent_ContentSync struct {
	ContentSync *ContentSync `protobuf:"bytes,12,opt,name=content_sync,json=contentSync,proto3,oneof"`
}

func (*CollaborationEvent_Cursor) isCollaborationEvent_Data() {}

func (*CollaborationEvent_Selection) isCollaborationEvent_Data() {}

func (*CollaborationEvent_ContentSync) isCollaborationEvent_Data() {}

type CursorUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Position      *Coordinate            `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Color         string                 `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
	Visible       bool                   `protobuf:"varint,3,opt,name=visible,proto3" json:"visible,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CursorUpdate) Reset() {
	*x = CursorUpdate{}
	mi := &file_realtime_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CursorUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CursorUpdate) ProtoMessage() {}

func (x *CursorUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_realtime_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CursorUpdate.ProtoReflect.Descriptor instead.
func (*CursorUpdate) Descriptor() ([]byte, []int) {
	return file_realtime_proto_rawDescGZIP(), []int{6}
}

func (x *CursorUpdate) GetPosition() *Coordinate {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *CursorUpdate) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *CursorUpdate) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

type SelectionUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MarkerIds     []string               `protobuf:"bytes,1,rep,name=marker_ids,json=markerIds,proto3" json:"marker_ids,omitempty"`
	Operation     string                 `protobuf:"bytes,2,opt,name=operation,proto3" json:"operation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SelectionUpdate) Reset() {
	*x = SelectionUpdate{}
	mi := &file_realtime_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectionUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectionUpdate) ProtoMessage() {}

func (x *SelectionUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_realtime_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectionUpdate.ProtoReflect.Descriptor instead.
func (*SelectionUpdate) Descriptor() ([]byte, []int) {
	return file_realtime_proto_rawDescGZIP(), []int{7}
}

func (x *SelectionUpdate) GetMarkerIds() []string {
	if x != nil {
		return x.MarkerIds
	}
	return nil
}

func (x *SelectionUpdate) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

type ContentSync struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Version       int32                  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Operations    []*Operation           `protobuf:"bytes,3,rep,name=operations,proto3" json:"operations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContentSync) Reset() {
	*x = ContentSync{}
	mi := &file_realtime_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContentSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentSync) ProtoMessage() {}

func (x *ContentSync) ProtoReflect() protoreflect.Message {
	mi := &file_realtime_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentSync.ProtoReflect.Descriptor instead.
func (*ContentSync) Descriptor() ([]byte, []int) {
	return file_realtime_proto_rawDescGZIP(), []int{8}
}

func (x *ContentSync) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ContentSync) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ContentSync) GetOperations() []*Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

type Operation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Data          map[string]string      `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Operation) Reset() {
	*x = Operation{}
	mi := &file_realtime_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation) ProtoMessage() {}

func (x *Operation) ProtoReflect() protoreflect.Message {
	mi := &file_realtime_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation.ProtoReflect.Descriptor instead.
func (*Operation) Descriptor() ([]byte, []int) {
	return file_realtime_proto_rawDescGZIP(), []int{9}
}

func (x *Operation) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Operation) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

// Error events
type ErrorEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Details       map[string]string      `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorEvent) Reset() {
	*x = ErrorEvent{}
	mi := &file_realtime_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorEvent) ProtoMessage() {}

func (x *ErrorEvent) ProtoReflect() protoreflect.Message {
	mi := &file_realtime_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorEvent.ProtoReflect.Descriptor instead.
func (*ErrorEvent) Descriptor() ([]byte, []int) {
	return file_realtime_proto_rawDescGZIP(), []int{10}
}

func (x *ErrorEvent) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ErrorEvent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorEvent) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

var File_realtime_proto protoreflect.FileDescriptor

const file_realtime_proto_rawDesc = "" +
	"\n" +
	"\x0erealtime.proto\x12\bmessages\"\xdf\x03\n" +
	"\tWSMessage\x12)\n" +
	"\x04type\x18\x01 \x01(\x0e2\x15.messages.MessageTypeR\x04type\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\x12\x17\n" +
	"\auser_id\x18\x04 \x01(\tR\x06userId\x12\x17\n" +
	"\aroom_id\x18\x05 \x01(\tR\x06roomId\x12:\n" +
	"\fmarker_event\x18\n" +
	" \x01(\v2\x15.messages.MarkerEventH\x00R\vmarkerEvent\x124\n" +
	"\n" +
	"user_event\x18\v \x01(\v2\x13.messages.UserEventH\x00R\tuserEvent\x12O\n" +
	"\x13collaboration_event\x18\f \x01(\v2\x1c.messages.CollaborationEventH\x00R\x12collaborationEvent\x127\n" +
	"\verror_event\x18\r \x01(\v2\x14.messages.ErrorEventH\x00R\n" +
	"errorEvent\x12@\n" +
	"\x0epresence_event\x18\x0e \x01(\v2\x17.messages.PresenceEventH\x00R\rpresenceEventB\t\n" +
	"\apayload\"\xfb\x02\n" +
	"\vMarkerEvent\x12\x1b\n" +
	"\tmarker_id\x18\x01 \x01(\tR\bmarkerId\x12\x17\n" +
	"\agame_id\x18\x02 \x01(\tR\x06gameId\x12\x15\n" +
	"\x06map_id\x18\x03 \x01(\tR\x05mapId\x12\x1f\n" +
	"\vcategory_id\x18\x04 \x01(\tR\n" +
	"categoryId\x12\x14\n" +
	"\x05title\x18\x05 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\x120\n" +
	"\bposition\x18\a \x01(\v2\x14.messages.CoordinateR\bposition\x12?\n" +
	"\bmetadata\x18\b \x03(\v2#.messages.MarkerEvent.MetadataEntryR\bmetadata\x12\x16\n" +
	"\x06status\x18\t \x01(\tR\x06status\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"D\n" +
	"\n" +
	"Coordinate\x12\x10\n" +
	"\x03lat\x18\x01 \x01(\x01R\x03lat\x12\x10\n" +
	"\x03lng\x18\x02 \x01(\x01R\x03lng\x12\x12\n" +
	"\x04zoom\x18\x03 \x01(\x05R\x04zoom\"\xc8\x01\n" +
	"\tUserEvent\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1d\n" +
	"\n" +
	"avatar_url\x18\x03 \x01(\tR\tavatarUrl\x12,\n" +
	"\x06status\x18\x04 \x01(\x0e2\x14.messages.UserStatusR\x06status\x129\n" +
	"\rlast_position\x18\x05 \x01(\v2\x14.messages.CoordinateR\flastPosition\"\xda\x02\n" +
	"\rPresenceEvent\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x17\n" +
	"\aroom_id\x18\x03 \x01(\tR\x06roomId\x120\n" +
	"\bposition\x18\x04 \x01(\v2\x14.messages.CoordinateR\bposition\x12,\n" +
	"\x06status\x18\x05 \x01(\x0e2\x14.messages.UserStatusR\x06status\x12\x1b\n" +
	"\tlast_seen\x18\x06 \x01(\x03R\blastSeen\x12A\n" +
	"\bmetadata\x18\a \x03(\v2%.messages.PresenceEvent.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x95\x02\n" +
	"\x12CollaborationEvent\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12/\n" +
	"\x04type\x18\x02 \x01(\x0e2\x1b.messages.CollaborationTypeR\x04type\x120\n" +
	"\x06cursor\x18\n" +
	" \x01(\v2\x16.messages.CursorUpdateH\x00R\x06cursor\x129\n" +
	"\tselection\x18\v \x01(\v2\x19.messages.SelectionUpdateH\x00R\tselection\x12:\n" +
	"\fcontent_sync\x18\f \x01(\v2\x15.messages.ContentSyncH\x00R\vcontentSyncB\x06\n" +
	"\x04data\"p\n" +
	"\fCursorUpdate\x120\n" +
	"\bposition\x18\x01 \x01(\v2\x14.messages.CoordinateR\bposition\x12\x14\n" +
	"\x05color\x18\x02 \x01(\tR\x05color\x12\x18\n" +
	"\avisible\x18\x03 \x01(\bR\avisible\"N\n" +
	"\x0fSelectionUpdate\x12\x1d\n" +
	"\n" +
	"marker_ids\x18\x01 \x03(\tR\tmarkerIds\x12\x1c\n" +
	"\toperation\x18\x02 \x01(\tR\toperation\"v\n" +
	"\vContentSync\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x05R\aversion\x123\n" +
	"\n" +
	"operations\x18\x03 \x03(\v2\x13.messages.OperationR\n" +
	"operations\"\x8b\x01\n" +
	"\tOperation\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x121\n" +
	"\x04data\x18\x02 \x03(\v2\x1d.messages.Operation.DataEntryR\x04data\x1a7\n" +
	"\tDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb3\x01\n" +
	"\n" +
	"ErrorEvent\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12;\n" +
	"\adetails\x18\x03 \x03(\v2!.messages.ErrorEvent.DetailsEntryR\adetails\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*\xf7\x01\n" +
	"\vMessageType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\x12\n" +
	"\x0eMARKER_CREATED\x10\x01\x12\x12\n" +
	"\x0eMARKER_UPDATED\x10\x02\x12\x12\n" +
	"\x0eMARKER_DELETED\x10\x03\x12\x0f\n" +
	"\vUSER_JOINED\x10\x04\x12\r\n" +
	"\tUSER_LEFT\x10\x05\x12\x11\n" +
	"\rUSER_PRESENCE\x10\x06\x12\x16\n" +
	"\x12COLLABORATION_SYNC\x10\a\x12\x18\n" +
	"\x14COLLABORATION_CURSOR\x10\b\x12\x1b\n" +
	"\x17COLLABORATION_SELECTION\x10\t\x12\b\n" +
	"\x04PING\x10\n" +
	"\x12\b\n" +
	"\x04PONG\x10\v\x12\t\n" +
	"\x05ERROR\x10\f*9\n" +
	"\n" +
	"UserStatus\x12\v\n" +
	"\aOFFLINE\x10\x00\x12\n" +
	"\n" +
	"\x06ONLINE\x10\x01\x12\b\n" +
	"\x04AWAY\x10\x02\x12\b\n" +
	"\x04BUSY\x10\x03*N\n" +
	"\x11CollaborationType\x12\x0f\n" +
	"\vCURSOR_MOVE\x10\x00\x12\x14\n" +
	"\x10SELECTION_CHANGE\x10\x01\x12\x12\n" +
	"\x0eCONTENT_CHANGE\x10\x02B\x06Z\x04./pbb\x06proto3"

var (
	file_realtime_proto_rawDescOnce sync.Once
	file_realtime_proto_rawDescData []byte
)

func file_realtime_proto_rawDescGZIP() []byte {
	file_realtime_proto_rawDescOnce.Do(func() {
		file_realtime_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_realtime_proto_rawDesc), len(file_realtime_proto_rawDesc)))
	})
	return file_realtime_proto_rawDescData
}

var file_realtime_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_realtime_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_realtime_proto_goTypes = []any{
	(MessageType)(0),           // 0: messages.MessageType
	(UserStatus)(0),            // 1: messages.UserStatus
	(CollaborationType)(0),     // 2: messages.CollaborationType
	(*WSMessage)(nil),          // 3: messages.WSMessage
	(*MarkerEvent)(nil),        // 4: messages.MarkerEvent
	(*Coordinate)(nil),         // 5: messages.Coordinate
	(*UserEvent)(nil),          // 6: messages.UserEvent
	(*PresenceEvent)(nil),      // 7: messages.PresenceEvent
	(*CollaborationEvent)(nil), // 8: messages.CollaborationEvent
	(*CursorUpdate)(nil),       // 9: messages.CursorUpdate
	(*SelectionUpdate)(nil),    // 10: messages.SelectionUpdate
	(*ContentSync)(nil),        // 11: messages.ContentSync
	(*Operation)(nil),          // 12: messages.Operation
	(*ErrorEvent)(nil),         // 13: messages.ErrorEvent
	nil,                        // 14: messages.MarkerEvent.MetadataEntry
	nil,                        // 15: messages.PresenceEvent.MetadataEntry
	nil,                        // 16: messages.Operation.DataEntry
	nil,                        // 17: messages.ErrorEvent.DetailsEntry
}
var file_realtime_proto_depIdxs = []int32{
	0,  // 0: messages.WSMessage.type:type_name -> messages.MessageType
	4,  // 1: messages.WSMessage.marker_event:type_name -> messages.MarkerEvent
	6,  // 2: messages.WSMessage.user_event:type_name -> messages.UserEvent
	8,  // 3: messages.WSMessage.collaboration_event:type_name -> messages.CollaborationEvent
	13, // 4: messages.WSMessage.error_event:type_name -> messages.ErrorEvent
	7,  // 5: messages.WSMessage.presence_event:type_name -> messages.PresenceEvent
	5,  // 6: messages.MarkerEvent.position:type_name -> messages.Coordinate
	14, // 7: messages.MarkerEvent.metadata:type_name -> messages.MarkerEvent.MetadataEntry
	1,  // 8: messages.UserEvent.status:type_name -> messages.UserStatus
	5,  // 9: messages.UserEvent.last_position:type_name -> messages.Coordinate
	5,  // 10: messages.PresenceEvent.position:type_name -> messages.Coordinate
	1,  // 11: messages.PresenceEvent.status:type_name -> messages.UserStatus
	15, // 12: messages.PresenceEvent.metadata:type_name -> messages.PresenceEvent.MetadataEntry
	2,  // 13: messages.CollaborationEvent.type:type_name -> messages.CollaborationType
	9,  // 14: messages.CollaborationEvent.cursor:type_name -> messages.CursorUpdate
	10, // 15: messages.CollaborationEvent.selection:type_name -> messages.SelectionUpdate
	11, // 16: messages.CollaborationEvent.content_sync:type_name -> messages.ContentSync
	5,  // 17: messages.CursorUpdate.position:type_name -> messages.Coordinate
	12, // 18: messages.ContentSync.operations:type_name -> messages.Operation
	16, // 19: messages.Operation.data:type_name -> messages.Operation.DataEntry
	17, // 20: messages.ErrorEvent.details:type_name -> messages.ErrorEvent.DetailsEntry
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_realtime_proto_init() }
func file_realtime_proto_init() {
	if File_realtime_proto != nil {
		return
	}
	file_realtime_proto_msgTypes[0].OneofWrappers = []any{
		(*WSMessage_MarkerEvent)(nil),
		(*WSMessage_UserEvent)(nil),
		(*WSMessage_CollaborationEvent)(nil),
		(*WSMessage_ErrorEvent)(nil),
		(*WSMessage_PresenceEvent)(nil),
	}
	file_realtime_proto_msgTypes[5].OneofWrappers = []any{
		(*CollaborationEvent_Cursor)(nil),
		(*CollaborationEvent_Selection)(nil),
		(*CollaborationEvent_ContentSync)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_realtime_proto_rawDesc), len(file_realtime_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_realtime_proto_goTypes,
		DependencyIndexes: file_realtime_proto_depIdxs,
		EnumInfos:         file_realtime_proto_enumTypes,
		MessageInfos:      file_realtime_proto_msgTypes,
	}.Build()
	File_realtime_proto = out.File
	file_realtime_proto_goTypes = nil
	file_realtime_proto_depIdxs = nil
}
